{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Configuration Schema",
  "description": "Schema for validating agent configuration objects",
  "type": "object",
  "required": [
    "name",
    "description",
    "keywords",
    "tools",
    "model",
    "provider",
    "examples"
  ],
  "properties": {
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9_-]+$",
      "description": "Unique agent name/identifier, alphanumeric with hyphens and underscores only"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Human-readable description of the agent's purpose"
    },
    "keywords": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "minItems": 1,
      "maxItems": 20,
      "uniqueItems": true,
      "description": "Keywords for agent discovery and matching"
    },
    "priority": {
      "type": "number",
      "description": "The priority of the agent, used for tie-breaking when multiple agents have the same score. Lower numbers indicate higher priority."
    },
    "tools": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Tool name/identifier"
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "description": "Optional tool description"
          },
          "parameters": {
            "type": "object",
            "description": "Optional tool parameters schema"
          }
        },
        "additionalProperties": false
      },
      "minItems": 0,
      "maxItems": 50,
      "description": "List of tools this agent can use"
    },
    "model": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "description": "AI model to use for this agent"
    },
    "provider": {
      "type": "string",
      "enum": ["openai", "gemini", "anthropic", "openrouter", "cohere"],
      "description": "AI provider for the model"
    },
    "examples": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["input", "output"],
        "properties": {
          "input": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1000,
            "description": "User input for the example"
          },
          "output": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Expected agent response or behavior"
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "description": "Optional description of what this example demonstrates"
          }
        },
        "additionalProperties": false
      },
      "minItems": 1,
      "maxItems": 10,
      "description": "Example interactions demonstrating agent usage"
    },
    "systemPrompt": {
      "type": "string",
      "maxLength": 5000,
      "description": "Optional system prompt for the agent"
    },
    "temperature": {
      "type": "number",
      "minimum": 0,
      "maximum": 2,
      "description": "Optional temperature setting for model"
    },
    "maxTokens": {
      "type": "integer",
      "minimum": 1,
      "maximum": 32768,
      "description": "Optional max tokens setting"
    },
    "customConfig": {
      "type": "object",
      "description": "Optional custom configuration",
      "additionalProperties": true
    }
  },
  "additionalProperties": false
}
